version: '3.8'

services:
  postgres:
    container_name: postgres
    restart: always
    networks:
      - db-network
    image: postgres:15
    environment:
      POSTGRES_DB: oprosnik
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      PGDATA: /var/lib/postgresql/data/pgdata/
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -d oprosnik -U postgres" ]
      interval: 5s
      timeout: 5s
      retries: 5
    volumes:
      - ./pg-data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    command: postgres -c shared_buffers=128MB -c max_connections=100

  backend:
    container_name: backend
    networks:
      - db-network
    build: ./backend
    command: bash -c "alembic upgrade head && uvicorn main:app --host 0.0.0.0 --port 8000"
    depends_on:
      postgres:
        condition: service_healthy
    ports:
      - "8000:8000"
    restart: always
    environment:
      - DATABASE_URL=postgresql+asyncpg://postgres:postgres@postgres:5432/oprosnik

  frontend:
    container_name: frontend
    networks:
      - db-network
    build: ./frontend
    depends_on:
      - backend
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080"
    restart: always

networks:
  db-network:
    driver: bridge

volumes:
  pg-data: 